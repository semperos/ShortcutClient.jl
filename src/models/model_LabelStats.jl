# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""LabelStats
A group of calculated values for this Label. This is not included if the slim? flag is set to true for the List Labels endpoint.

    LabelStats(;
        num_related_documents=nothing,
        num_epics=nothing,
        num_stories_unstarted=nothing,
        num_stories_total=nothing,
        num_epics_unstarted=nothing,
        num_epics_in_progress=nothing,
        num_points_unstarted=nothing,
        num_stories_unestimated=nothing,
        num_points_in_progress=nothing,
        num_epics_total=nothing,
        num_stories_completed=nothing,
        num_points_completed=nothing,
        num_stories_backlog=nothing,
        num_points_total=nothing,
        num_stories_in_progress=nothing,
        num_points_backlog=nothing,
        num_epics_completed=nothing,
    )

    - num_related_documents::Int64 : The total number of Documents associated this Label.
    - num_epics::Int64 : The total number of Epics with this Label.
    - num_stories_unstarted::Int64 : The total number of stories unstarted Stories with this Label.
    - num_stories_total::Int64 : The total number of Stories with this Label.
    - num_epics_unstarted::Int64 : The number of unstarted epics associated with this label.
    - num_epics_in_progress::Int64 : The number of in progress epics associated with this label.
    - num_points_unstarted::Int64 : The total number of unstarted points with this Label.
    - num_stories_unestimated::Int64 : The total number of Stories with no point estimate with this Label.
    - num_points_in_progress::Int64 : The total number of in-progress points with this Label.
    - num_epics_total::Int64 : The total number of Epics associated with this Label.
    - num_stories_completed::Int64 : The total number of completed Stories with this Label.
    - num_points_completed::Int64 : The total number of completed points with this Label.
    - num_stories_backlog::Int64 : The total number of stories backlog Stories with this Label.
    - num_points_total::Int64 : The total number of points with this Label.
    - num_stories_in_progress::Int64 : The total number of in-progress Stories with this Label.
    - num_points_backlog::Int64 : The total number of backlog points with this Label.
    - num_epics_completed::Int64 : The number of completed Epics associated with this Label.
"""
Base.@kwdef mutable struct LabelStats <: OpenAPI.APIModel
    num_related_documents::Union{Nothing, Int64} = nothing
    num_epics::Union{Nothing, Int64} = nothing
    num_stories_unstarted::Union{Nothing, Int64} = nothing
    num_stories_total::Union{Nothing, Int64} = nothing
    num_epics_unstarted::Union{Nothing, Int64} = nothing
    num_epics_in_progress::Union{Nothing, Int64} = nothing
    num_points_unstarted::Union{Nothing, Int64} = nothing
    num_stories_unestimated::Union{Nothing, Int64} = nothing
    num_points_in_progress::Union{Nothing, Int64} = nothing
    num_epics_total::Union{Nothing, Int64} = nothing
    num_stories_completed::Union{Nothing, Int64} = nothing
    num_points_completed::Union{Nothing, Int64} = nothing
    num_stories_backlog::Union{Nothing, Int64} = nothing
    num_points_total::Union{Nothing, Int64} = nothing
    num_stories_in_progress::Union{Nothing, Int64} = nothing
    num_points_backlog::Union{Nothing, Int64} = nothing
    num_epics_completed::Union{Nothing, Int64} = nothing

    function LabelStats(num_related_documents, num_epics, num_stories_unstarted, num_stories_total, num_epics_unstarted, num_epics_in_progress, num_points_unstarted, num_stories_unestimated, num_points_in_progress, num_epics_total, num_stories_completed, num_points_completed, num_stories_backlog, num_points_total, num_stories_in_progress, num_points_backlog, num_epics_completed, )
        OpenAPI.validate_property(LabelStats, Symbol("num_related_documents"), num_related_documents)
        OpenAPI.validate_property(LabelStats, Symbol("num_epics"), num_epics)
        OpenAPI.validate_property(LabelStats, Symbol("num_stories_unstarted"), num_stories_unstarted)
        OpenAPI.validate_property(LabelStats, Symbol("num_stories_total"), num_stories_total)
        OpenAPI.validate_property(LabelStats, Symbol("num_epics_unstarted"), num_epics_unstarted)
        OpenAPI.validate_property(LabelStats, Symbol("num_epics_in_progress"), num_epics_in_progress)
        OpenAPI.validate_property(LabelStats, Symbol("num_points_unstarted"), num_points_unstarted)
        OpenAPI.validate_property(LabelStats, Symbol("num_stories_unestimated"), num_stories_unestimated)
        OpenAPI.validate_property(LabelStats, Symbol("num_points_in_progress"), num_points_in_progress)
        OpenAPI.validate_property(LabelStats, Symbol("num_epics_total"), num_epics_total)
        OpenAPI.validate_property(LabelStats, Symbol("num_stories_completed"), num_stories_completed)
        OpenAPI.validate_property(LabelStats, Symbol("num_points_completed"), num_points_completed)
        OpenAPI.validate_property(LabelStats, Symbol("num_stories_backlog"), num_stories_backlog)
        OpenAPI.validate_property(LabelStats, Symbol("num_points_total"), num_points_total)
        OpenAPI.validate_property(LabelStats, Symbol("num_stories_in_progress"), num_stories_in_progress)
        OpenAPI.validate_property(LabelStats, Symbol("num_points_backlog"), num_points_backlog)
        OpenAPI.validate_property(LabelStats, Symbol("num_epics_completed"), num_epics_completed)
        return new(num_related_documents, num_epics, num_stories_unstarted, num_stories_total, num_epics_unstarted, num_epics_in_progress, num_points_unstarted, num_stories_unestimated, num_points_in_progress, num_epics_total, num_stories_completed, num_points_completed, num_stories_backlog, num_points_total, num_stories_in_progress, num_points_backlog, num_epics_completed, )
    end
end # type LabelStats

const _property_types_LabelStats = Dict{Symbol,String}(Symbol("num_related_documents")=>"Int64", Symbol("num_epics")=>"Int64", Symbol("num_stories_unstarted")=>"Int64", Symbol("num_stories_total")=>"Int64", Symbol("num_epics_unstarted")=>"Int64", Symbol("num_epics_in_progress")=>"Int64", Symbol("num_points_unstarted")=>"Int64", Symbol("num_stories_unestimated")=>"Int64", Symbol("num_points_in_progress")=>"Int64", Symbol("num_epics_total")=>"Int64", Symbol("num_stories_completed")=>"Int64", Symbol("num_points_completed")=>"Int64", Symbol("num_stories_backlog")=>"Int64", Symbol("num_points_total")=>"Int64", Symbol("num_stories_in_progress")=>"Int64", Symbol("num_points_backlog")=>"Int64", Symbol("num_epics_completed")=>"Int64", )
OpenAPI.property_type(::Type{ LabelStats }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LabelStats[name]))}

function check_required(o::LabelStats)
    o.num_related_documents === nothing && (return false)
    o.num_epics === nothing && (return false)
    o.num_stories_unstarted === nothing && (return false)
    o.num_stories_total === nothing && (return false)
    o.num_epics_unstarted === nothing && (return false)
    o.num_epics_in_progress === nothing && (return false)
    o.num_points_unstarted === nothing && (return false)
    o.num_stories_unestimated === nothing && (return false)
    o.num_points_in_progress === nothing && (return false)
    o.num_epics_total === nothing && (return false)
    o.num_stories_completed === nothing && (return false)
    o.num_points_completed === nothing && (return false)
    o.num_stories_backlog === nothing && (return false)
    o.num_points_total === nothing && (return false)
    o.num_stories_in_progress === nothing && (return false)
    o.num_points_backlog === nothing && (return false)
    o.num_epics_completed === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ LabelStats }, name::Symbol, val)

    if name === Symbol("num_related_documents")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_epics")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_stories_unstarted")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_stories_total")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_epics_unstarted")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_epics_in_progress")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_points_unstarted")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_stories_unestimated")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_points_in_progress")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_epics_total")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_stories_completed")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_points_completed")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_stories_backlog")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_points_total")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_stories_in_progress")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_points_backlog")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end

    if name === Symbol("num_epics_completed")
        OpenAPI.validate_param(name, "LabelStats", :format, val, "int64")
    end
end
