# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""HistoryChangesStory
The changes that have occurred as a result of the action.

    HistoryChangesStory(;
        description=nothing,
        archived=nothing,
        started=nothing,
        task_ids=nothing,
        mention_ids=nothing,
        story_type=nothing,
        name=nothing,
        completed=nothing,
        blocker=nothing,
        epic_id=nothing,
        branch_ids=nothing,
        commit_ids=nothing,
        requested_by_id=nothing,
        iteration_id=nothing,
        label_ids=nothing,
        group_id=nothing,
        workflow_state_id=nothing,
        object_story_link_ids=nothing,
        follower_ids=nothing,
        owner_ids=nothing,
        custom_field_value_ids=nothing,
        estimate=nothing,
        subject_story_link_ids=nothing,
        blocked=nothing,
        project_id=nothing,
        deadline=nothing,
    )

    - description::StoryHistoryChangeOldNewStr
    - archived::StoryHistoryChangeOldNewBool
    - started::StoryHistoryChangeOldNewBool
    - task_ids::StoryHistoryChangeAddsRemovesInt
    - mention_ids::StoryHistoryChangeAddsRemovesUuid
    - story_type::StoryHistoryChangeOldNewStr
    - name::StoryHistoryChangeOldNewStr
    - completed::StoryHistoryChangeOldNewBool
    - blocker::StoryHistoryChangeOldNewBool
    - epic_id::StoryHistoryChangeOldNewInt
    - branch_ids::StoryHistoryChangeAddsRemovesInt
    - commit_ids::StoryHistoryChangeAddsRemovesInt
    - requested_by_id::StoryHistoryChangeOldNewUuid
    - iteration_id::StoryHistoryChangeOldNewInt
    - label_ids::StoryHistoryChangeAddsRemovesInt
    - group_id::StoryHistoryChangeOldNewUuid
    - workflow_state_id::StoryHistoryChangeOldNewInt
    - object_story_link_ids::StoryHistoryChangeAddsRemovesInt
    - follower_ids::StoryHistoryChangeAddsRemovesUuid
    - owner_ids::StoryHistoryChangeAddsRemovesUuid
    - custom_field_value_ids::StoryHistoryChangeAddsRemovesUuid
    - estimate::StoryHistoryChangeOldNewInt
    - subject_story_link_ids::StoryHistoryChangeAddsRemovesInt
    - blocked::StoryHistoryChangeOldNewBool
    - project_id::StoryHistoryChangeOldNewInt
    - deadline::StoryHistoryChangeOldNewStr
"""
Base.@kwdef mutable struct HistoryChangesStory <: OpenAPI.APIModel
    description = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewStr }
    archived = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewBool }
    started = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewBool }
    task_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesInt }
    mention_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesUuid }
    story_type = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewStr }
    name = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewStr }
    completed = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewBool }
    blocker = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewBool }
    epic_id = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewInt }
    branch_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesInt }
    commit_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesInt }
    requested_by_id = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewUuid }
    iteration_id = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewInt }
    label_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesInt }
    group_id = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewUuid }
    workflow_state_id = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewInt }
    object_story_link_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesInt }
    follower_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesUuid }
    owner_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesUuid }
    custom_field_value_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesUuid }
    estimate = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewInt }
    subject_story_link_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesInt }
    blocked = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewBool }
    project_id = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewInt }
    deadline = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewStr }

    function HistoryChangesStory(description, archived, started, task_ids, mention_ids, story_type, name, completed, blocker, epic_id, branch_ids, commit_ids, requested_by_id, iteration_id, label_ids, group_id, workflow_state_id, object_story_link_ids, follower_ids, owner_ids, custom_field_value_ids, estimate, subject_story_link_ids, blocked, project_id, deadline, )
        OpenAPI.validate_property(HistoryChangesStory, Symbol("description"), description)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("archived"), archived)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("started"), started)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("task_ids"), task_ids)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("mention_ids"), mention_ids)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("story_type"), story_type)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("name"), name)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("completed"), completed)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("blocker"), blocker)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("epic_id"), epic_id)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("branch_ids"), branch_ids)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("commit_ids"), commit_ids)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("requested_by_id"), requested_by_id)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("iteration_id"), iteration_id)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("label_ids"), label_ids)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("group_id"), group_id)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("workflow_state_id"), workflow_state_id)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("object_story_link_ids"), object_story_link_ids)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("follower_ids"), follower_ids)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("owner_ids"), owner_ids)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("custom_field_value_ids"), custom_field_value_ids)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("estimate"), estimate)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("subject_story_link_ids"), subject_story_link_ids)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("blocked"), blocked)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("project_id"), project_id)
        OpenAPI.validate_property(HistoryChangesStory, Symbol("deadline"), deadline)
        return new(description, archived, started, task_ids, mention_ids, story_type, name, completed, blocker, epic_id, branch_ids, commit_ids, requested_by_id, iteration_id, label_ids, group_id, workflow_state_id, object_story_link_ids, follower_ids, owner_ids, custom_field_value_ids, estimate, subject_story_link_ids, blocked, project_id, deadline, )
    end
end # type HistoryChangesStory

const _property_types_HistoryChangesStory = Dict{Symbol,String}(Symbol("description")=>"StoryHistoryChangeOldNewStr", Symbol("archived")=>"StoryHistoryChangeOldNewBool", Symbol("started")=>"StoryHistoryChangeOldNewBool", Symbol("task_ids")=>"StoryHistoryChangeAddsRemovesInt", Symbol("mention_ids")=>"StoryHistoryChangeAddsRemovesUuid", Symbol("story_type")=>"StoryHistoryChangeOldNewStr", Symbol("name")=>"StoryHistoryChangeOldNewStr", Symbol("completed")=>"StoryHistoryChangeOldNewBool", Symbol("blocker")=>"StoryHistoryChangeOldNewBool", Symbol("epic_id")=>"StoryHistoryChangeOldNewInt", Symbol("branch_ids")=>"StoryHistoryChangeAddsRemovesInt", Symbol("commit_ids")=>"StoryHistoryChangeAddsRemovesInt", Symbol("requested_by_id")=>"StoryHistoryChangeOldNewUuid", Symbol("iteration_id")=>"StoryHistoryChangeOldNewInt", Symbol("label_ids")=>"StoryHistoryChangeAddsRemovesInt", Symbol("group_id")=>"StoryHistoryChangeOldNewUuid", Symbol("workflow_state_id")=>"StoryHistoryChangeOldNewInt", Symbol("object_story_link_ids")=>"StoryHistoryChangeAddsRemovesInt", Symbol("follower_ids")=>"StoryHistoryChangeAddsRemovesUuid", Symbol("owner_ids")=>"StoryHistoryChangeAddsRemovesUuid", Symbol("custom_field_value_ids")=>"StoryHistoryChangeAddsRemovesUuid", Symbol("estimate")=>"StoryHistoryChangeOldNewInt", Symbol("subject_story_link_ids")=>"StoryHistoryChangeAddsRemovesInt", Symbol("blocked")=>"StoryHistoryChangeOldNewBool", Symbol("project_id")=>"StoryHistoryChangeOldNewInt", Symbol("deadline")=>"StoryHistoryChangeOldNewStr", )
OpenAPI.property_type(::Type{ HistoryChangesStory }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_HistoryChangesStory[name]))}

function check_required(o::HistoryChangesStory)
    true
end

function OpenAPI.validate_property(::Type{ HistoryChangesStory }, name::Symbol, val)


























end
