# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateEntityTemplate
Request parameters for changing either a template&#39;s name or any of   the attributes it is designed to pre-populate.

    UpdateEntityTemplate(;
        name=nothing,
        story_contents=nothing,
    )

    - name::String : The updated template name.
    - story_contents::UpdateStoryContents
"""
Base.@kwdef mutable struct UpdateEntityTemplate <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    story_contents = nothing # spec type: Union{ Nothing, UpdateStoryContents }

    function UpdateEntityTemplate(name, story_contents, )
        OpenAPI.validate_property(UpdateEntityTemplate, Symbol("name"), name)
        OpenAPI.validate_property(UpdateEntityTemplate, Symbol("story_contents"), story_contents)
        return new(name, story_contents, )
    end
end # type UpdateEntityTemplate

const _property_types_UpdateEntityTemplate = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("story_contents")=>"UpdateStoryContents", )
OpenAPI.property_type(::Type{ UpdateEntityTemplate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateEntityTemplate[name]))}

function check_required(o::UpdateEntityTemplate)
    true
end

function OpenAPI.validate_property(::Type{ UpdateEntityTemplate }, name::Symbol, val)

    if name === Symbol("name")
        OpenAPI.validate_param(name, "UpdateEntityTemplate", :maxLength, val, 128)
        OpenAPI.validate_param(name, "UpdateEntityTemplate", :minLength, val, 1)
    end

end
