# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateLinkedFile

    CreateLinkedFile(;
        description=nothing,
        story_id=nothing,
        name=nothing,
        thumbnail_url=nothing,
        type=nothing,
        size=nothing,
        uploader_id=nothing,
        content_type=nothing,
        url=nothing,
    )

    - description::String : The description of the file.
    - story_id::Int64 : The ID of the linked story.
    - name::String : The name of the file.
    - thumbnail_url::String : The URL of the thumbnail, if the integration provided it.
    - type::String : The integration type of the file (e.g. google, dropbox, box).
    - size::Int64 : The filesize, if the integration provided it.
    - uploader_id::String : The UUID of the member that uploaded the file.
    - content_type::String : The content type of the image (e.g. txt/plain).
    - url::String : The URL of linked file.
"""
Base.@kwdef mutable struct CreateLinkedFile <: OpenAPI.APIModel
    description::Union{Nothing, String} = nothing
    story_id::Union{Nothing, Int64} = nothing
    name::Union{Nothing, String} = nothing
    thumbnail_url::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    size::Union{Nothing, Int64} = nothing
    uploader_id::Union{Nothing, String} = nothing
    content_type::Union{Nothing, String} = nothing
    url::Union{Nothing, String} = nothing

    function CreateLinkedFile(description, story_id, name, thumbnail_url, type, size, uploader_id, content_type, url, )
        OpenAPI.validate_property(CreateLinkedFile, Symbol("description"), description)
        OpenAPI.validate_property(CreateLinkedFile, Symbol("story_id"), story_id)
        OpenAPI.validate_property(CreateLinkedFile, Symbol("name"), name)
        OpenAPI.validate_property(CreateLinkedFile, Symbol("thumbnail_url"), thumbnail_url)
        OpenAPI.validate_property(CreateLinkedFile, Symbol("type"), type)
        OpenAPI.validate_property(CreateLinkedFile, Symbol("size"), size)
        OpenAPI.validate_property(CreateLinkedFile, Symbol("uploader_id"), uploader_id)
        OpenAPI.validate_property(CreateLinkedFile, Symbol("content_type"), content_type)
        OpenAPI.validate_property(CreateLinkedFile, Symbol("url"), url)
        return new(description, story_id, name, thumbnail_url, type, size, uploader_id, content_type, url, )
    end
end # type CreateLinkedFile

const _property_types_CreateLinkedFile = Dict{Symbol,String}(Symbol("description")=>"String", Symbol("story_id")=>"Int64", Symbol("name")=>"String", Symbol("thumbnail_url")=>"String", Symbol("type")=>"String", Symbol("size")=>"Int64", Symbol("uploader_id")=>"String", Symbol("content_type")=>"String", Symbol("url")=>"String", )
OpenAPI.property_type(::Type{ CreateLinkedFile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateLinkedFile[name]))}

function check_required(o::CreateLinkedFile)
    o.name === nothing && (return false)
    o.type === nothing && (return false)
    o.url === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateLinkedFile }, name::Symbol, val)

    if name === Symbol("description")
        OpenAPI.validate_param(name, "CreateLinkedFile", :maxLength, val, 512)
    end

    if name === Symbol("story_id")
        OpenAPI.validate_param(name, "CreateLinkedFile", :format, val, "int64")
    end

    if name === Symbol("name")
        OpenAPI.validate_param(name, "CreateLinkedFile", :maxLength, val, 256)
        OpenAPI.validate_param(name, "CreateLinkedFile", :minLength, val, 1)
    end

    if name === Symbol("thumbnail_url")
        OpenAPI.validate_param(name, "CreateLinkedFile", :maxLength, val, 2048)
        OpenAPI.validate_param(name, "CreateLinkedFile", :pattern, val, r"^https?:\/\/.+$")
    end

    if name === Symbol("type")
        OpenAPI.validate_param(name, "CreateLinkedFile", :enum, val, ["google", "url", "dropbox", "box", "onedrive"])
    end


    if name === Symbol("size")
        OpenAPI.validate_param(name, "CreateLinkedFile", :format, val, "int64")
    end

    if name === Symbol("uploader_id")
        OpenAPI.validate_param(name, "CreateLinkedFile", :format, val, "uuid")
    end

    if name === Symbol("content_type")
        OpenAPI.validate_param(name, "CreateLinkedFile", :maxLength, val, 128)
    end

    if name === Symbol("url")
        OpenAPI.validate_param(name, "CreateLinkedFile", :maxLength, val, 2048)
        OpenAPI.validate_param(name, "CreateLinkedFile", :pattern, val, r"^https?:\/\/.+$")
    end
end
