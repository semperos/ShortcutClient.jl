# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PullRequestLabel
Corresponds to a VCS Label associated with a Pull Request.

    PullRequestLabel(;
        entity_type=nothing,
        id=nothing,
        color=nothing,
        description=nothing,
        name=nothing,
    )

    - entity_type::String : A string description of this resource.
    - id::Int64 : The unique ID of the VCS Label.
    - color::String : The color of the VCS label.
    - description::String : The description of the VCS label.
    - name::String : The name of the VCS label.
"""
Base.@kwdef mutable struct PullRequestLabel <: OpenAPI.APIModel
    entity_type::Union{Nothing, String} = nothing
    id::Union{Nothing, Int64} = nothing
    color::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing

    function PullRequestLabel(entity_type, id, color, description, name, )
        OpenAPI.validate_property(PullRequestLabel, Symbol("entity_type"), entity_type)
        OpenAPI.validate_property(PullRequestLabel, Symbol("id"), id)
        OpenAPI.validate_property(PullRequestLabel, Symbol("color"), color)
        OpenAPI.validate_property(PullRequestLabel, Symbol("description"), description)
        OpenAPI.validate_property(PullRequestLabel, Symbol("name"), name)
        return new(entity_type, id, color, description, name, )
    end
end # type PullRequestLabel

const _property_types_PullRequestLabel = Dict{Symbol,String}(Symbol("entity_type")=>"String", Symbol("id")=>"Int64", Symbol("color")=>"String", Symbol("description")=>"String", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ PullRequestLabel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PullRequestLabel[name]))}

function check_required(o::PullRequestLabel)
    o.entity_type === nothing && (return false)
    o.id === nothing && (return false)
    o.color === nothing && (return false)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ PullRequestLabel }, name::Symbol, val)


    if name === Symbol("id")
        OpenAPI.validate_param(name, "PullRequestLabel", :format, val, "int64")
    end

    if name === Symbol("color")
        OpenAPI.validate_param(name, "PullRequestLabel", :format, val, "css-color")
    end
    if name === Symbol("color")
        OpenAPI.validate_param(name, "PullRequestLabel", :minLength, val, 1)
        OpenAPI.validate_param(name, "PullRequestLabel", :pattern, val, r"^#[a-fA-F0-9]{6}$")
    end


end
