# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UnusableEntitlementError

    UnusableEntitlementError(;
        reason_tag=nothing,
        entitlement_tag=nothing,
        message=nothing,
    )

    - reason_tag::String : The tag for violating an entitlement action.
    - entitlement_tag::String : Short tag describing the unusable entitlement action taken by the user.
    - message::String : Message displayed to the user on why their action failed.
"""
Base.@kwdef mutable struct UnusableEntitlementError <: OpenAPI.APIModel
    reason_tag::Union{Nothing, String} = nothing
    entitlement_tag::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing

    function UnusableEntitlementError(reason_tag, entitlement_tag, message, )
        OpenAPI.validate_property(UnusableEntitlementError, Symbol("reason_tag"), reason_tag)
        OpenAPI.validate_property(UnusableEntitlementError, Symbol("entitlement_tag"), entitlement_tag)
        OpenAPI.validate_property(UnusableEntitlementError, Symbol("message"), message)
        return new(reason_tag, entitlement_tag, message, )
    end
end # type UnusableEntitlementError

const _property_types_UnusableEntitlementError = Dict{Symbol,String}(Symbol("reason_tag")=>"String", Symbol("entitlement_tag")=>"String", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ UnusableEntitlementError }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UnusableEntitlementError[name]))}

function check_required(o::UnusableEntitlementError)
    o.reason_tag === nothing && (return false)
    o.entitlement_tag === nothing && (return false)
    o.message === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UnusableEntitlementError }, name::Symbol, val)

    if name === Symbol("reason_tag")
        OpenAPI.validate_param(name, "UnusableEntitlementError", :enum, val, ["entitlement-violation"])
    end


    if name === Symbol("entitlement_tag")
        OpenAPI.validate_param(name, "UnusableEntitlementError", :maxLength, val, 63)
        OpenAPI.validate_param(name, "UnusableEntitlementError", :minLength, val, 1)
    end

    if name === Symbol("message")
        OpenAPI.validate_param(name, "UnusableEntitlementError", :maxLength, val, 256)
        OpenAPI.validate_param(name, "UnusableEntitlementError", :minLength, val, 1)
    end
end
