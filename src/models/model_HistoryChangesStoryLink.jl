# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""HistoryChangesStoryLink
The changes that have occurred as a result of the action.

    HistoryChangesStoryLink(;
        verb=nothing,
        object_id=nothing,
        subject_id=nothing,
    )

    - verb::StoryHistoryChangeOldNewStr
    - object_id::StoryHistoryChangeOldNewInt
    - subject_id::StoryHistoryChangeOldNewInt
"""
Base.@kwdef mutable struct HistoryChangesStoryLink <: OpenAPI.APIModel
    verb = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewStr }
    object_id = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewInt }
    subject_id = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewInt }

    function HistoryChangesStoryLink(verb, object_id, subject_id, )
        OpenAPI.validate_property(HistoryChangesStoryLink, Symbol("verb"), verb)
        OpenAPI.validate_property(HistoryChangesStoryLink, Symbol("object_id"), object_id)
        OpenAPI.validate_property(HistoryChangesStoryLink, Symbol("subject_id"), subject_id)
        return new(verb, object_id, subject_id, )
    end
end # type HistoryChangesStoryLink

const _property_types_HistoryChangesStoryLink = Dict{Symbol,String}(Symbol("verb")=>"StoryHistoryChangeOldNewStr", Symbol("object_id")=>"StoryHistoryChangeOldNewInt", Symbol("subject_id")=>"StoryHistoryChangeOldNewInt", )
OpenAPI.property_type(::Type{ HistoryChangesStoryLink }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_HistoryChangesStoryLink[name]))}

function check_required(o::HistoryChangesStoryLink)
    true
end

function OpenAPI.validate_property(::Type{ HistoryChangesStoryLink }, name::Symbol, val)



end
