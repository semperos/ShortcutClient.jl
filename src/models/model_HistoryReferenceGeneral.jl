# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""HistoryReferenceGeneral
A default reference for entity types that don&#39;t have extra fields.

    HistoryReferenceGeneral(;
        id=nothing,
        entity_type=nothing,
        name=nothing,
    )

    - id::Any : The ID of the entity referenced.
    - entity_type::String : The type of entity referenced.
    - name::String : The name of the entity referenced.
"""
Base.@kwdef mutable struct HistoryReferenceGeneral <: OpenAPI.APIModel
    id::Union{Nothing, Any} = nothing
    entity_type::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing

    function HistoryReferenceGeneral(id, entity_type, name, )
        OpenAPI.validate_property(HistoryReferenceGeneral, Symbol("id"), id)
        OpenAPI.validate_property(HistoryReferenceGeneral, Symbol("entity_type"), entity_type)
        OpenAPI.validate_property(HistoryReferenceGeneral, Symbol("name"), name)
        return new(id, entity_type, name, )
    end
end # type HistoryReferenceGeneral

const _property_types_HistoryReferenceGeneral = Dict{Symbol,String}(Symbol("id")=>"Any", Symbol("entity_type")=>"String", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ HistoryReferenceGeneral }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_HistoryReferenceGeneral[name]))}

function check_required(o::HistoryReferenceGeneral)
    o.id === nothing && (return false)
    o.entity_type === nothing && (return false)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ HistoryReferenceGeneral }, name::Symbol, val)



end
