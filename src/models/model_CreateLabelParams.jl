# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateLabelParams
Request parameters for creating a Label on a Shortcut Story.

    CreateLabelParams(;
        name=nothing,
        description=nothing,
        color=nothing,
        external_id=nothing,
    )

    - name::String : The name of the new Label.
    - description::String : The description of the new Label.
    - color::String : The hex color to be displayed with the Label (for example, \&quot;#ff0000\&quot;).
    - external_id::String : This field can be set to another unique ID. In the case that the Label has been imported from another tool, the ID in the other tool can be indicated here.
"""
Base.@kwdef mutable struct CreateLabelParams <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    color::Union{Nothing, String} = nothing
    external_id::Union{Nothing, String} = nothing

    function CreateLabelParams(name, description, color, external_id, )
        OpenAPI.validate_property(CreateLabelParams, Symbol("name"), name)
        OpenAPI.validate_property(CreateLabelParams, Symbol("description"), description)
        OpenAPI.validate_property(CreateLabelParams, Symbol("color"), color)
        OpenAPI.validate_property(CreateLabelParams, Symbol("external_id"), external_id)
        return new(name, description, color, external_id, )
    end
end # type CreateLabelParams

const _property_types_CreateLabelParams = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("description")=>"String", Symbol("color")=>"String", Symbol("external_id")=>"String", )
OpenAPI.property_type(::Type{ CreateLabelParams }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateLabelParams[name]))}

function check_required(o::CreateLabelParams)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreateLabelParams }, name::Symbol, val)

    if name === Symbol("name")
        OpenAPI.validate_param(name, "CreateLabelParams", :maxLength, val, 128)
        OpenAPI.validate_param(name, "CreateLabelParams", :minLength, val, 1)
    end

    if name === Symbol("description")
        OpenAPI.validate_param(name, "CreateLabelParams", :maxLength, val, 1024)
    end

    if name === Symbol("color")
        OpenAPI.validate_param(name, "CreateLabelParams", :format, val, "css-color")
    end
    if name === Symbol("color")
        OpenAPI.validate_param(name, "CreateLabelParams", :minLength, val, 1)
        OpenAPI.validate_param(name, "CreateLabelParams", :pattern, val, r"^#[a-fA-F0-9]{6}$")
    end

    if name === Symbol("external_id")
        OpenAPI.validate_param(name, "CreateLabelParams", :maxLength, val, 128)
        OpenAPI.validate_param(name, "CreateLabelParams", :minLength, val, 1)
    end
end
