# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""HistoryReferenceBranch
A reference to a VCS Branch.

    HistoryReferenceBranch(;
        id=nothing,
        entity_type=nothing,
        name=nothing,
        url=nothing,
    )

    - id::Any : The ID of the entity referenced.
    - entity_type::String : The type of entity referenced.
    - name::String : The name of the entity referenced.
    - url::String : The external URL for the Branch.
"""
Base.@kwdef mutable struct HistoryReferenceBranch <: OpenAPI.APIModel
    id::Union{Nothing, Any} = nothing
    entity_type::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    url::Union{Nothing, String} = nothing

    function HistoryReferenceBranch(id, entity_type, name, url, )
        OpenAPI.validate_property(HistoryReferenceBranch, Symbol("id"), id)
        OpenAPI.validate_property(HistoryReferenceBranch, Symbol("entity_type"), entity_type)
        OpenAPI.validate_property(HistoryReferenceBranch, Symbol("name"), name)
        OpenAPI.validate_property(HistoryReferenceBranch, Symbol("url"), url)
        return new(id, entity_type, name, url, )
    end
end # type HistoryReferenceBranch

const _property_types_HistoryReferenceBranch = Dict{Symbol,String}(Symbol("id")=>"Any", Symbol("entity_type")=>"String", Symbol("name")=>"String", Symbol("url")=>"String", )
OpenAPI.property_type(::Type{ HistoryReferenceBranch }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_HistoryReferenceBranch[name]))}

function check_required(o::HistoryReferenceBranch)
    o.id === nothing && (return false)
    o.entity_type === nothing && (return false)
    o.name === nothing && (return false)
    o.url === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ HistoryReferenceBranch }, name::Symbol, val)




    if name === Symbol("url")
        OpenAPI.validate_param(name, "HistoryReferenceBranch", :maxLength, val, 2048)
        OpenAPI.validate_param(name, "HistoryReferenceBranch", :pattern, val, r"^https?:\/\/.+$")
    end
end
