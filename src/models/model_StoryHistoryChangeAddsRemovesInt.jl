# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""StoryHistoryChangeAddsRemovesInt
Task IDs that have been added or removed from the Story.

    StoryHistoryChangeAddsRemovesInt(;
        adds=nothing,
        removes=nothing,
    )

    - adds::Vector{Int64} : The values that have been added.
    - removes::Vector{Int64} : The values that have been removed
"""
Base.@kwdef mutable struct StoryHistoryChangeAddsRemovesInt <: OpenAPI.APIModel
    adds::Union{Nothing, Vector{Int64}} = nothing
    removes::Union{Nothing, Vector{Int64}} = nothing

    function StoryHistoryChangeAddsRemovesInt(adds, removes, )
        OpenAPI.validate_property(StoryHistoryChangeAddsRemovesInt, Symbol("adds"), adds)
        OpenAPI.validate_property(StoryHistoryChangeAddsRemovesInt, Symbol("removes"), removes)
        return new(adds, removes, )
    end
end # type StoryHistoryChangeAddsRemovesInt

const _property_types_StoryHistoryChangeAddsRemovesInt = Dict{Symbol,String}(Symbol("adds")=>"Vector{Int64}", Symbol("removes")=>"Vector{Int64}", )
OpenAPI.property_type(::Type{ StoryHistoryChangeAddsRemovesInt }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StoryHistoryChangeAddsRemovesInt[name]))}

function check_required(o::StoryHistoryChangeAddsRemovesInt)
    true
end

function OpenAPI.validate_property(::Type{ StoryHistoryChangeAddsRemovesInt }, name::Symbol, val)


end
