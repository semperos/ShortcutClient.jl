# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateCustomFieldEnumValue

    UpdateCustomFieldEnumValue(;
        id=nothing,
        value=nothing,
        color_key=nothing,
        enabled=nothing,
    )

    - id::String : The unique ID of an existing EnumValue within the CustomField&#39;s domain.
    - value::String : A string value within the domain of this Custom Field.
    - color_key::String : A color key associated with this EnumValue within the CustomField&#39;s domain.
    - enabled::Bool : Whether this EnumValue is enabled for its CustomField or not. Leaving this key out of the request leaves the current enabled state untouched.
"""
Base.@kwdef mutable struct UpdateCustomFieldEnumValue <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    value::Union{Nothing, String} = nothing
    color_key::Union{Nothing, String} = nothing
    enabled::Union{Nothing, Bool} = nothing

    function UpdateCustomFieldEnumValue(id, value, color_key, enabled, )
        OpenAPI.validate_property(UpdateCustomFieldEnumValue, Symbol("id"), id)
        OpenAPI.validate_property(UpdateCustomFieldEnumValue, Symbol("value"), value)
        OpenAPI.validate_property(UpdateCustomFieldEnumValue, Symbol("color_key"), color_key)
        OpenAPI.validate_property(UpdateCustomFieldEnumValue, Symbol("enabled"), enabled)
        return new(id, value, color_key, enabled, )
    end
end # type UpdateCustomFieldEnumValue

const _property_types_UpdateCustomFieldEnumValue = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("value")=>"String", Symbol("color_key")=>"String", Symbol("enabled")=>"Bool", )
OpenAPI.property_type(::Type{ UpdateCustomFieldEnumValue }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateCustomFieldEnumValue[name]))}

function check_required(o::UpdateCustomFieldEnumValue)
    true
end

function OpenAPI.validate_property(::Type{ UpdateCustomFieldEnumValue }, name::Symbol, val)

    if name === Symbol("id")
        OpenAPI.validate_param(name, "UpdateCustomFieldEnumValue", :format, val, "uuid")
    end

    if name === Symbol("value")
        OpenAPI.validate_param(name, "UpdateCustomFieldEnumValue", :maxLength, val, 63)
        OpenAPI.validate_param(name, "UpdateCustomFieldEnumValue", :minLength, val, 1)
    end


end
