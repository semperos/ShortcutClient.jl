# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""HistoryChangesTask
The changes that have occurred as a result of the action.

    HistoryChangesTask(;
        complete=nothing,
        description=nothing,
        mention_ids=nothing,
        owner_ids=nothing,
    )

    - complete::StoryHistoryChangeOldNewBool
    - description::StoryHistoryChangeOldNewStr
    - mention_ids::StoryHistoryChangeAddsRemovesUuid
    - owner_ids::StoryHistoryChangeAddsRemovesUuid
"""
Base.@kwdef mutable struct HistoryChangesTask <: OpenAPI.APIModel
    complete = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewBool }
    description = nothing # spec type: Union{ Nothing, StoryHistoryChangeOldNewStr }
    mention_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesUuid }
    owner_ids = nothing # spec type: Union{ Nothing, StoryHistoryChangeAddsRemovesUuid }

    function HistoryChangesTask(complete, description, mention_ids, owner_ids, )
        OpenAPI.validate_property(HistoryChangesTask, Symbol("complete"), complete)
        OpenAPI.validate_property(HistoryChangesTask, Symbol("description"), description)
        OpenAPI.validate_property(HistoryChangesTask, Symbol("mention_ids"), mention_ids)
        OpenAPI.validate_property(HistoryChangesTask, Symbol("owner_ids"), owner_ids)
        return new(complete, description, mention_ids, owner_ids, )
    end
end # type HistoryChangesTask

const _property_types_HistoryChangesTask = Dict{Symbol,String}(Symbol("complete")=>"StoryHistoryChangeOldNewBool", Symbol("description")=>"StoryHistoryChangeOldNewStr", Symbol("mention_ids")=>"StoryHistoryChangeAddsRemovesUuid", Symbol("owner_ids")=>"StoryHistoryChangeAddsRemovesUuid", )
OpenAPI.property_type(::Type{ HistoryChangesTask }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_HistoryChangesTask[name]))}

function check_required(o::HistoryChangesTask)
    true
end

function OpenAPI.validate_property(::Type{ HistoryChangesTask }, name::Symbol, val)




end
